%Code 3 
% This code takes the calculations from the previous code and performs the
% selections of the invasions. This code will contain the classification
% and machine learning 

clear var 
outputfolder = uigetdir('C:\Users\Owner\OneDrive\Desktop\Stoll Fellowship Code\','Where would you like to store the converted data?');% Enter output folder
prompt = 'What name handle would you like to use? (s(number).mat will be added automatically)\\n (enter inside single quotes)\\n';
dlgtitle = 'Name Handle';
dims = [1 40];
outputname = inputdlg(prompt, dlgtitle, dims);

prompt = {' What experiment would you like to process? '}; % Enter ExpID
dlgtitle = 'Select Experiment';
dims = [1 40];
ExpID_ = string(inputdlg(prompt, dlgtitle, dims));

calc_folder = strcat('C:\Users\Owner\OneDrive\Desktop\Stoll Fellowship Code\', ExpID_,'_outputfolder_calc');
filenames = dir(fullfile(calc_folder,'*mat'));
total_num = numel(filenames);

num_clicks = 0; % Initialize parameter to keep track of the total number of times user has clicked
num_clicks_array_a = [];
num_clicks_array_m = [];
num_clicks_array_c = []; 
cr_c = 0; % Initialize numbering for index of cropped individual invasions
cr_a = 0;
cr_m = 0;
g = 0; % Initialize numbering for collective invasions across tumors
a = 0; % Initialize numbering for amoeboid invasions across tumors
m = 0; % Initialize numbering for mesenchymal invasions across tumors 
for m = 1:total_num
   f = load(fullfile(calc_folder, filenames(m).name)); 
   % Find the directory separators
    str = strcat(calc_folder, filenames(m).name);
    %Extract tumor number
    slashlocations = regexp(str, '_');
    substr = extractAfter(str, slashlocations(2)+6);
    tumor_num = extractBefore(substr, 2);
    % Extract the day 
    substr = extractAfter(str, slashlocations(3)+1);
    day_num = extractBefore( substr, 2);
   % Rename necessary variables 
   Invasions = f. Invasions;
   Tumor_coreBW_Mask = f. Tumor_coreBW_Mask;
   Width_tumor_core = f. Width_tumor_core;
   individual_invasion_sum = f. individual_invasion_sum;
   total_tumor_area = f. total_tumor_area;

Invasion_L = bwlabel(Invasions);
Invasion_L_C = bwlabel(Invasions); % Important for cropping images later in selection portion of code
%imshow(label2rgb(BW_active_contour_L));
stats_collective_invasions = regionprops(logical(Invasion_L),'Area');
num = length(stats_collective_invasions);
collective_area_array = [];
collective_area_arr = [];
for i=1:num
        s = regionprops(logical(Invasion_L), 'Area');
        areas = cat(1,s.Area);
        %Concatenate last value of centroids to the end of centroids_arr array (insert as new row to the bottom). 
        collective_area_arr = [collective_area_array; areas];
end

collective_invasion_area = sum(collective_area_arr);

Invasion_mask = boundarymask(Invasions);
imshow(labeloverlay(Image1_adjust1,Invasion_mask, 'Transparency',0));%generates 

%Stats for tumor core of masked image
stats_tumor_core = regionprops(logical(Tumor_coreBW_Mask), 'Area');
%Tumor Core outline
Tumor_coreBW_Bound = boundarymask(Tumor_coreBW_Mask);
imshow(Tumor_coreBW_Bound);

total_fraction_invaded = 1 -((stats_tumor_core.Area)/(stats_Max_Area_thresh.Area));

BW_active_contour_L2 = bwlabel(Tumor_coreBW_Mask);% Regionprops to extract information from the tumor core
%imshow(label2rgb(BW_active_contour_L));
stats_core = regionprops(logical(BW_active_contour_L2),'Centroid', 'Area', 'Perimeter', 'MajorAxisLength', 'MinorAxisLength');
table_core = struct2table(stats_core);

%Initialize cell arrays to store data for selected invasions
index_collective_invasions = {};
index_amoeboid_invasions = {};
index_mesenchymal_invasions = {};

%Initialize arrays for both x and y coordinates of amoeboid invasions
X_A_cor = [];
Y_A_cor = [];
Subtract_C = imsubtract(editedMask_cont, Max_area);
%imshow(Subtract_C);
Classify_Invasions = bwareaopen(Subtract_C, 300);
Classify_Invasions_L = bwlabel(Classify_Invasions);
labeled_Image = Classify_Invasions_L;
labeled_Image_C = Classify_Invasions_L;
stats_classify = regionprops(Classify_Invasions_L, 'Area');
Dim = size(stats_classify);
num_objects = Dim(1,1);
%imshow(Classify_Invasions_L);

if num_objects > 0
dlgtitle = 'Classify Individual Invasions';
uiwait(msgbox({'Please click on amoeboid invasions'; 'Please click return when you are finished selecting invasions'},dlgtitle));
imshow(Subtract_C);
count = 500;
num_clicks_A = 0;
str = strings(1,500);
for i = 1:500
    str(1, i) = i;
end
while count < 1000
    hold on
[yCenter, xCenter] = ginput(1);
hold off
if isempty(yCenter)
    break;
end
% up number of times user clicked
num_clicks = num_clicks + 1;
num_clicks_A = num_clicks_A +1;
a = a + 1; % Keep track of index of amoeboid cell invasions
% put x over selected cell
hold on
%text = convertStringsToChars(str(1, num_clicks));
labeled_Image = insertText(labeled_Image, [yCenter, xCenter], str(1, a), 'FontSize', 30, 'BoxColor', 'yellow', 'BoxOpacity', 0.5, 'TextColor', 'black');
%text(yCenter, xCenter, str(1, num_clicks),'Color','red','FontSize',10);
%labeled_Image = labelimg(Classify_Invasions_L, text);
imshow(labeled_Image); title('Labeled image')
%plot(yCenter, xCenter);
%gtext(str(1,num_clicks),'Color','red','FontSize',10);
% up the count
count = count + 1;
%Save coordinates into arrays
X_A_cor(num_clicks_A) = xCenter;
Y_A_cor(num_clicks_A) = yCenter;
%all_A_Y = (yCenter);
%all_A_X = (xcenter);
end

%num_clicks = num_clicks + num_clicks_A;
for s = 1:num_clicks_A
    cr_a = cr_a + 1; % index for cropped amoeboid invasions cells
    num_clicks_array_a(a) = a;
if num_clicks_A == 0
    FileName_output = fullfile('C:\Users\Owner\OneDrive\Desktop\Stoll Fellowship Code\Needle Tumor Amoeboid Invasions',sprintf('%d.tif',n));
    imwrite(labeled_Image,FileName_output);% writes image to amoeboid invasions folder
    
else
    [L, num_Obj] = bwlabel(Classify_Invasions);
    b = bwboundaries(Classify_Invasions);
    Selec = cell(1,1);
    for k = 1:num_Obj
        Obj = L ==k;
        bb = b{k};
        X_obj = bb(:, 1);
        Y_obj = bb(:, 2);
        Selec{k} = inpolygon(X_A_cor(s),Y_A_cor(s),X_obj,Y_obj); 
    end
    Selec;
    Selec = [Selec{:}];
    [value,index] = max(Selec);
    Obj = L ==index;
    %figure, imshow(Obj);
    stats_A_invasion = regionprops(logical(Obj), 'all');
    stats_A_invasion_cell = struct2cell(stats_A_invasion);
    cell_image_bb = stats_A_invasion.BoundingBox;
    bbMatrix = vertcat(stats_A_invasion(:).BoundingBox);
    %get dimensions of bounding box 
    height = bbMatrix(:,3)+ 10; %height
    width = bbMatrix(:,4)+ 10; %width 
    X_cor_TL = bbMatrix(:,1) - 5;
    Y_cor_TL = bbMatrix(:, 2) - 5; 
    % Use bounding box dimensions to generate frame for individual cells 
    cell_image_cropped_amoeboid = imcrop(labeled_Image_C, [X_cor_TL, Y_cor_TL, height, width]);
    
    % get outline of cropped image
    cell_image_cropped_b = boundarymask(cell_image_cropped_amoeboid);
    
    cell_image = boundarymask(labeled_Image_C);
    %imshow(cell_image_cropped_b);
    
    savename = strcat(outputfolder,'/',outputname,'tu',tumor_num,'_d', day_num, '.mat');
    save(string(savename),'stats_A_invasion_cell','labeled_Image', 'cell_image_cropped_amoeboid');
    
end
end

dlgtitle = 'Classify Invasions';
uiwait(msgbox({'Please click on mesenchymal invasions'; 'Please click return when you are finished selecting invasions'},dlgtitle));
% Initialize arrays for both x and y coordinates for mesenchymal invasions
X_M_cor = [];
Y_M_cor = [];
%figure, imshow(Classify_Invasions);
count = 500;
%num_clicks = 0;
num_clicks_M = 0;% Initialize number of clicks for mesenchymal invasions
str_M = strings(1,500);
for i = 1:500
    str_M(1, i) = i;
end
while count < 1000
    hold on
[yCenter_M, xCenter_M] = ginput(1);
hold off
if isempty(yCenter_M)
    break;
end
% up number of times user clicked
num_clicks_M = num_clicks_M +1;
m = m + 1; % index for cropped invasions images 
% put x over selected cell
hold on
%text = convertStringsToChars(str(1, num_clicks));
labeled_Image = insertText(labeled_Image, [yCenter_M, xCenter_M], str_M(1, m), 'FontSize', 30, 'BoxColor', 'cyan', 'BoxOpacity', 0.5, 'TextColor', 'black');
imshow(labeled_Image); title('Labeled image')
% up the count
count = count + 1;
%Save coordinates into arrays
X_M_cor(num_clicks_M) = xCenter_M;
Y_M_cor(num_clicks_M) = yCenter_M;
num_clicks_array(num_clicks) = num_clicks;
end

for t = 1:num_clicks_M
    cr_m = cr_m + 1; % index for analysis of selected cells
    num_clicks_array_m(m) = m;
if num_clicks_M == 0
    FileName_output = fullfile('C:\Users\Owner\OneDrive\Desktop\Stoll Fellowship Code\Needle Tumor Mesenchymal Invasions',sprintf('%d.tif',n));
    imwrite(labeled_Image,FileName_output);% writes image to amoeboid invasions folder
    
else
    [L_M, num_Obj_M] = bwlabel(Classify_Invasions);
    b = bwboundaries(Classify_Invasions);
    Selec_M = cell(1,1);
    for k = 1:num_Obj_M
        Obj_M = L_M ==k;
        bb_M = b{k};
        X_obj_M = bb_M(:, 1);
        Y_obj_M = bb_M(:, 2);
        Selec_M{k} = inpolygon(X_M_cor(t),Y_M_cor(t),X_obj_M,Y_obj_M); 
    end
    Selec_M;
    Selec_M = [Selec_M{:}];
    [value,index] = max(Selec_M);
    Obj_M = L_M ==index;
    %figure, imshow(Obj_M);
    stats_M_invasion = regionprops(logical(Obj_M), 'all');
    stats_M_invasion_cell = struct2cell(stats_M_invasion);
    cell_image_bb = stats_M_invasion.BoundingBox;
    bbMatrix = vertcat(stats_M_invasion(:).BoundingBox);
    %get dimensions of bounding box 
    height_M = bbMatrix(:,3)+ 10; %height
    width_M = bbMatrix(:,4)+ 10; %width 
    X_cor_TL_M = bbMatrix(:,1) - 5;
    Y_cor_TL_M = bbMatrix(:, 2) - 5; 
    % Use bounding box dimensions to generate frame for individual cells 
    cell_image_cropped_M = imcrop(labeled_Image_C, [X_cor_TL_M, Y_cor_TL_M, height_M, width_M]);
    
    % get outline of cropped image
    cell_image_cropped_b = boundarymask(cell_image_cropped_M);
    
    cell_image = boundarymask(labeled_Image_C);
    %imshow(cell_image_cropped_b);
    
    savename = strcat(outputfolder,'/',outputname,'tu',tumor_num,'_d', day_num, '.mat');
    save(string(savename),'stats_M_invasion_cell','labeled_Image', 'cell_image_cropped_M');
   
end
end
end

X_C_cor = [];
Y_C_cor = [];
dlgtitle = 'Classify Collective Invasions';
uiwait(msgbox({'Please click on collective invasions'; 'Please click return when you are finished selecting invasions'},dlgtitle));
count = 500;
num_clicks_C = 0; % Keep track of how many times user has clicked
num_clicks = 0;
figure, imshow(Invasion_L);

str_C = strings(1,500);
for i = 1:500
    str_C(1, i) = i;
end
while count < 1000
    hold on
[yCenter_C, xCenter_C] = ginput(1);
hold off
if isempty(yCenter_C)
    break;
end
% up number of times user clicked
num_clicks_C = num_clicks_C +1;
g = g + 1; % index for cropped invasions images 
% put x over selected cell
hold on
%text = convertStringsToChars(str(1, num_clicks));
Invasion_L = insertText(Invasion_L, [yCenter_C, xCenter_C], str_C(1,g), 'FontSize', 30, 'BoxColor', 'green', 'BoxOpacity', 0.5, 'TextColor', 'black');
imshow(Invasion_L); title('Labeled image')
% up the count
count = count + 1;
%Save coordinates into arrays
X_C_cor(num_clicks_C) = xCenter_C;
Y_C_cor(num_clicks_C) = yCenter_C;

end

for t = 1:num_clicks_C
    cr_c = cr_c + 1; % index for analysis of selected cells
    num_clicks_array_c(cr_c) = cr_c;
if num_clicks_C == 0
    FileName_output = fullfile('C:\Users\Owner\OneDrive\Desktop\Stoll Fellowship Code\Needle Tumor Collective Invasions',sprintf('%d.tif',n));
    imwrite(Invasion_L,FileName_output);% writes image to amoeboid invasions folder
    
else
    [L_C, num_Obj_C] = bwlabel(Invasions);
    b = bwboundaries(Invasions);
    Selec_C = cell(1,1);
    for k = 1:num_Obj_C
        Obj_C = L_C ==k;
        bb_C = b{k};
        X_obj_C = bb_C(:, 1);
        Y_obj_C = bb_C(:, 2);
        Selec_C{k} = inpolygon(X_C_cor(t),Y_C_cor(t),X_obj_C,Y_obj_C); 
    end
    Selec_C;
    Selec_C = [Selec_C{:}];
    [value_C,index_C] = max(Selec_C);
    Obj_C = L_C ==index_C;
    %figure, imshow(Obj_C);
    stats_C_invasion = regionprops(logical(Obj_C), 'all');
    stats_C_invasion_cell = struct2cell(stats_C_invasion);
    cell_image_bb = stats_C_invasion.BoundingBox;
    bbMatrix = vertcat(stats_C_invasion(:).BoundingBox);
    %get dimensions of bounding box 
    height_C = bbMatrix(:,3)+ 10; %height
    width_C = bbMatrix(:,4)+ 10; %width 
    X_cor_TL_C = bbMatrix(:,1) - 5;
    Y_cor_TL_C = bbMatrix(:, 2) - 5; 
    % Use bounding box dimensions to generate frame for individual cells 
    cell_image_cropped_C = imcrop(Invasion_L_C, [X_cor_TL_C, Y_cor_TL_C, height_C, width_C]);
    
    % get outline of cropped image
    cell_image_cropped_b = boundarymask(cell_image_cropped_C);
    
    savename = strcat(outputfolder,'/',outputname,'tu',tumor_num,'_d', day_num, '.mat');
    save(string(savename),'stats_C_invasion_cell','labeled_Image', 'cell_image_cropped_C');
   
end
end

end
